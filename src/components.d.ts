/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { beverage } from "./interfaces/app-user";
export namespace Components {
    interface AppRoot {
    }
    interface MenuTabs {
    }
    interface ModalAddBeverage {
    }
    interface ModalLogin {
    }
    interface ModalTracker {
        "beverage": beverage;
        "currentIntake": number;
    }
    interface ScreenCaffeine {
        "routerNav": HTMLIonRouterElement;
    }
    interface ScreenCoffee {
        "routerNav": HTMLIonRouterElement;
    }
    interface ScreenIntro {
        "routerNav": HTMLIonRouterElement;
    }
}
declare global {
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLMenuTabsElement extends Components.MenuTabs, HTMLStencilElement {
    }
    var HTMLMenuTabsElement: {
        prototype: HTMLMenuTabsElement;
        new (): HTMLMenuTabsElement;
    };
    interface HTMLModalAddBeverageElement extends Components.ModalAddBeverage, HTMLStencilElement {
    }
    var HTMLModalAddBeverageElement: {
        prototype: HTMLModalAddBeverageElement;
        new (): HTMLModalAddBeverageElement;
    };
    interface HTMLModalLoginElement extends Components.ModalLogin, HTMLStencilElement {
    }
    var HTMLModalLoginElement: {
        prototype: HTMLModalLoginElement;
        new (): HTMLModalLoginElement;
    };
    interface HTMLModalTrackerElement extends Components.ModalTracker, HTMLStencilElement {
    }
    var HTMLModalTrackerElement: {
        prototype: HTMLModalTrackerElement;
        new (): HTMLModalTrackerElement;
    };
    interface HTMLScreenCaffeineElement extends Components.ScreenCaffeine, HTMLStencilElement {
    }
    var HTMLScreenCaffeineElement: {
        prototype: HTMLScreenCaffeineElement;
        new (): HTMLScreenCaffeineElement;
    };
    interface HTMLScreenCoffeeElement extends Components.ScreenCoffee, HTMLStencilElement {
    }
    var HTMLScreenCoffeeElement: {
        prototype: HTMLScreenCoffeeElement;
        new (): HTMLScreenCoffeeElement;
    };
    interface HTMLScreenIntroElement extends Components.ScreenIntro, HTMLStencilElement {
    }
    var HTMLScreenIntroElement: {
        prototype: HTMLScreenIntroElement;
        new (): HTMLScreenIntroElement;
    };
    interface HTMLElementTagNameMap {
        "app-root": HTMLAppRootElement;
        "menu-tabs": HTMLMenuTabsElement;
        "modal-add-beverage": HTMLModalAddBeverageElement;
        "modal-login": HTMLModalLoginElement;
        "modal-tracker": HTMLModalTrackerElement;
        "screen-caffeine": HTMLScreenCaffeineElement;
        "screen-coffee": HTMLScreenCoffeeElement;
        "screen-intro": HTMLScreenIntroElement;
    }
}
declare namespace LocalJSX {
    interface AppRoot {
        "onAuthenticated"?: (event: CustomEvent<boolean>) => void;
    }
    interface MenuTabs {
        "onHaptic"?: (event: CustomEvent<any>) => void;
    }
    interface ModalAddBeverage {
    }
    interface ModalLogin {
    }
    interface ModalTracker {
        "beverage"?: beverage;
        "currentIntake"?: number;
    }
    interface ScreenCaffeine {
        "onHaptic"?: (event: CustomEvent<any>) => void;
        "onHideSplashScreen"?: (event: CustomEvent<any>) => void;
        "routerNav"?: HTMLIonRouterElement;
    }
    interface ScreenCoffee {
        "onHaptic"?: (event: CustomEvent<any>) => void;
        "routerNav"?: HTMLIonRouterElement;
    }
    interface ScreenIntro {
        "onHaptic"?: (event: CustomEvent<any>) => void;
        "onHideSplashScreen"?: (event: CustomEvent<any>) => void;
        "routerNav"?: HTMLIonRouterElement;
    }
    interface IntrinsicElements {
        "app-root": AppRoot;
        "menu-tabs": MenuTabs;
        "modal-add-beverage": ModalAddBeverage;
        "modal-login": ModalLogin;
        "modal-tracker": ModalTracker;
        "screen-caffeine": ScreenCaffeine;
        "screen-coffee": ScreenCoffee;
        "screen-intro": ScreenIntro;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "menu-tabs": LocalJSX.MenuTabs & JSXBase.HTMLAttributes<HTMLMenuTabsElement>;
            "modal-add-beverage": LocalJSX.ModalAddBeverage & JSXBase.HTMLAttributes<HTMLModalAddBeverageElement>;
            "modal-login": LocalJSX.ModalLogin & JSXBase.HTMLAttributes<HTMLModalLoginElement>;
            "modal-tracker": LocalJSX.ModalTracker & JSXBase.HTMLAttributes<HTMLModalTrackerElement>;
            "screen-caffeine": LocalJSX.ScreenCaffeine & JSXBase.HTMLAttributes<HTMLScreenCaffeineElement>;
            "screen-coffee": LocalJSX.ScreenCoffee & JSXBase.HTMLAttributes<HTMLScreenCoffeeElement>;
            "screen-intro": LocalJSX.ScreenIntro & JSXBase.HTMLAttributes<HTMLScreenIntroElement>;
        }
    }
}
